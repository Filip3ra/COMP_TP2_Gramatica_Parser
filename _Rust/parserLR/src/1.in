fn fn
main main
( (
) )
{ {
if if
ID ID
( (
! !
( (
NUM NUM
) )
) )
{ {
let let
ID ID
= =
ID ID
; ;
ID ID
= =
NUM NUM
* *
NUM NUM
+ +
NUM NUM
^ ^
NUM NUM
; ;
} }
else else
if if
( (
ID ID
|| ||
ID ID
&& &&
ID ID
) )
{ {
let let
ID ID
: :
[ [
i8 i8
; ;
NUM NUM
] ]
= =
[ [
NUM NUM
, ,
NUM NUM
] ]
; ;
} }
else else
{ {
} }
} }
fn fn
ID ID
( (
ID ID
: :
bool bool
, ,
ID ID
: :
f32 f32
) )
{ {
while while
( (
NUM NUM
> >
NUM NUM
) )
{ {
ID ID
( (
NUM NUM
) )
; ;
ID ID
( (
ID ID
, ,
NUM NUM
) )
; ;
} }
} }
fn fn
ID ID
( (
ID ID
: :
char char
) )
{ {
if if
( (
NUM NUM
>= >=
NUM NUM
) )
{ {
return return
ID ID
; ;
} }
else else
{ {
let let
ID ID
: :
[ [
i16 i16
; ;
ID ID
] ]
= =
[ [
NUM NUM
, ,
NUM NUM
, ,
NUM NUM
, ,
NUM NUM
] ]
; ;
ID ID
[ [
NUM NUM
] ]
; ;
} }
ID ID
= =
ID ID
+ +
NUM NUM
} }
